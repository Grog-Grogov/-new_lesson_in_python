'''
 Практическое задание:
  1. Из списка чисел получите числа, кратные пяти.
  (кратные -  делятся на 5 без остатка)
  2. Дано --словарь c данными о пользователе(fio,email, phone).
  Напишите словарное включение, в котором выводятся данные о email.
'''

list_1 = [x for x in (1, 5, 15, 25, 33, 45 ,55 ,105, 123) if x % 5 == 0]
print('список кратные 5 = ', list_1)

print("**********************************")

dict_1 = {'fio':'ivaanov', 'email':'goog@gmail.com', 'phone':+1239876543}
b = [i for i in dict_1.values()]
print(b[0])

print("**********************************")

# 1. Воспроизвести код, который я привела выше, чтобы потренироваться с генераторами-выражениями.
#
# Вспоминает задание с урока про списковые включения.
# 2. Из списка чисел получите числа, кратные пяти.
# (кратные -  делятся на 5 без остатка)и распечатайте получившиеся значения,
# используя генератор-выражение и цикл for.

print("**********************************")

list_1_1 = (x for x in (1, 5, 15, 25, 33, 45 ,55 ,105, 123) if x % 5 == 0)
for a in list_1_1:
   print('цикл for помог распечать числа кратные 5 == ', a)

print("**********************************")

'''''Практика - закрепление по генераторам.
️Списковые включения
️На входе программа получает список целых чисел s. Сформируйте список, состоящий только из чётных элементов s.

  ️Генераторы-выражения
️На входе программа получает список целых чисел s. Составьте генератор-выражение и вычислите все элементы,
состоящие только из двухзначных элементов s, записанных 2 раза подряд.

   ️Генераторы-функции
На входе программа получает список целых чисел s. Составьте генератор-функцию и вычислите все элементы, 
стоящих на позициях, не кратных 3.
'''''


print("**********************************")
list_2 = (1, 5, 12, 25, 22, 45 ,60 ,105, 123)
list_2_1 = [x for x in list_2 if x % 2 == 0] # списковое включение
list_2_2 = (x for x in list_2 if x % 2 == 0) # генератор
print(list_2_1)
for i in list_2_2:
    print('список состоящий только из чётных элементов ', i)

list_3 = [1, 1, 1, 25, 25, 45, 232, 444, 676, 11, 11, 23, 23]
list_3_1 = (x for x in list_3 if 10 <= x <= 99)
for a in list_3_1:
        print('элементы состоящие только из двухзначных элементов', a)

li = [1, 1, 1, 25, 25, 45, 232, 444, 676, 11, 11, 23, 23]
def generator_function():
    for i in li[::3]:
        yield i

for three in generator_function():

    print('элементы стоящие на позициях, не кратных 3 = ', three)